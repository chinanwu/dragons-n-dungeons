// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Character component behaviour changes detail 1`] = `
<div
  className="Character"
>
  <div
    className="Character__name"
  >
    <LabelledInput
      id="characterName"
      label="Name: "
      onChange={[Function]}
      type="string"
      value="test"
    />
  </div>
  <div
    className="Character--bottom"
  >
    <div
      className="Character--left"
    >
      <LabelledInput
        id="characterLevel"
        label="Level: "
        onChange={[Function]}
        type="number"
      />
      <LabelledInput
        id="characterRace"
        label="Race: "
        onChange={[Function]}
        type="text"
      />
      <LabelledInput
        id="characterClass"
        label="Class: "
        onChange={[Function]}
        type="text"
      />
    </div>
    <div
      className="Character--right"
    >
      <LabelledInput
        id="characterExperience"
        label="Experience: "
        onChange={[Function]}
        type="number"
      />
      <LabelledInput
        id="characterAlignment"
        label="Alignment: "
        onChange={[Function]}
        type="text"
      />
      <LabelledInput
        id="characterBackground"
        label="Background: "
        onChange={[Function]}
        type="text"
      />
    </div>
  </div>
</div>
`;

exports[`Character component rendering renders Character 1`] = `
<div
  className="Character"
>
  <div
    className="Character__name"
  >
    <LabelledInput
      id="characterName"
      label="Name: "
      onChange={[Function]}
      type="string"
    />
  </div>
  <div
    className="Character--bottom"
  >
    <div
      className="Character--left"
    >
      <LabelledInput
        id="characterLevel"
        label="Level: "
        onChange={[Function]}
        type="number"
      />
      <LabelledInput
        id="characterRace"
        label="Race: "
        onChange={[Function]}
        type="text"
      />
      <LabelledInput
        id="characterClass"
        label="Class: "
        onChange={[Function]}
        type="text"
      />
    </div>
    <div
      className="Character--right"
    >
      <LabelledInput
        id="characterExperience"
        label="Experience: "
        onChange={[Function]}
        type="number"
      />
      <LabelledInput
        id="characterAlignment"
        label="Alignment: "
        onChange={[Function]}
        type="text"
      />
      <LabelledInput
        id="characterBackground"
        label="Background: "
        onChange={[Function]}
        type="text"
      />
    </div>
  </div>
</div>
`;
