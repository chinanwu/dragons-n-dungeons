// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs component behaviour switch to tab when tab list button is clicked 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={0}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": false,
          "name": "Test-tab",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={0}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component behaviour when keydown with unsupported keys, do not prevent default 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={0}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": false,
          "name": "Test-tab",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={0}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component behaviour when left is pressed and next tab is disabled, go to the next non-disabled tab 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={1}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": true,
          "name": "Test-tab",
        },
        Object {
          "disabled": false,
          "name": "Test-tab2",
        },
        Object {
          "disabled": false,
          "name": "Test-tab3",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={1}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 2",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 3",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component behaviour when left is pressed and previous tab is disabled, go to the first previous non-disabled tab 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={1}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": true,
          "name": "Test-tab",
        },
        Object {
          "disabled": false,
          "name": "Test-tab2",
        },
        Object {
          "disabled": false,
          "name": "Test-tab3",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={1}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 2",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 3",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component behaviour when left is pressed, go to previous tab 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={0}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": false,
          "name": "Test-tab",
        },
        Object {
          "disabled": false,
          "name": "Test-tab2",
        },
        Object {
          "disabled": true,
          "name": "Test-tab3",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={0}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 2",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 3",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component behaviour when left or up arrow is pressed, go to the tab to the left 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={0}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": false,
          "name": "Test-tab",
        },
        Object {
          "disabled": false,
          "name": "Test-tab2",
        },
        Object {
          "disabled": true,
          "name": "Test-tab3",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={0}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 2",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 3",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component behaviour when right is pressed, and next is disabled, go to the next non-disabled tab 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={1}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": false,
          "name": "Test-tab",
        },
        Object {
          "disabled": false,
          "name": "Test-tab2",
        },
        Object {
          "disabled": true,
          "name": "Test-tab3",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={1}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 2",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 3",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component behaviour when right or down arrow is pressed, go to the tab to the right 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={2}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": true,
          "name": "Test-tab",
        },
        Object {
          "disabled": false,
          "name": "Test-tab2",
        },
        Object {
          "disabled": false,
          "name": "Test-tab3",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={2}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 2",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": "Test 3",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component rendering renders Tabs 1`] = `null`;

exports[`Tabs component rendering renders Tabs with empty children 1`] = `null`;

exports[`Tabs component rendering renders Tabs with non-tab child 1`] = `
<div>
  <p>
    Test
  </p>
</div>
`;

exports[`Tabs component rendering renders Tabs with tab child 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={0}
    footer={null}
    header={null}
    id="tabList"
    list={
      Array [
        Object {
          "disabled": false,
          "name": "Test-tab",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={0}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 12",
            },
            "type": "p",
          },
        ],
      ]
    }
  />
  
</div>
`;

exports[`Tabs component rendering renders Tabs with tab children 1`] = `
<div
  className="Tabs"
  role="tabs"
>
  <Memo(Connect(TabList))
    activeIndex={1}
    footer={
      Object {
        "props": Object {
          "children": Array [
            Object {
              "props": Object {
                "children": "Footer",
              },
              "type": "p",
            },
          ],
        },
        "type": Object {
          "name": "TabFooter",
        },
      }
    }
    header={
      Object {
        "props": Object {
          "children": Array [
            Object {
              "props": Object {
                "children": "Logo",
              },
              "type": "p",
            },
          ],
        },
        "type": Object {
          "name": "TabHeader",
        },
      }
    }
    id="tabList"
    list={
      Array [
        Object {
          "disabled": true,
          "name": "Test-tab",
        },
        Object {
          "disabled": false,
          "name": "Test-tab2",
        },
      ]
    }
    onClick={[Function]}
    onKeyDown={[Function]}
  />
  <Memo(Connect(TabPanels))
    activeIndex={1}
    id="tabPanels"
    panels={
      Array [
        Array [
          Object {
            "props": Object {
              "children": "Test 1",
            },
            "type": "p",
          },
        ],
        Array [
          Object {
            "props": Object {
              "children": Array [
                Object {
                  "props": Object {
                    "children": "Test 2",
                  },
                  "type": "p",
                },
              ],
            },
            "type": "div",
          },
        ],
      ]
    }
  />
  Object {
    "props": Object {
      "children": "Test 3",
    },
    "type": "p",
  }
</div>
`;
